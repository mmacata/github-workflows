name: Linting and code quality check

on:
  workflow_call:
    inputs:
      black-version:
        required: false
        type: string
        default: '24.4.2'
      flake8-version:
        required: false
        type: string
        default: '7.0.0'
      pylint-version:
        required: false
        type: string
        default: '3.2.2'
      VALIDATE_BASH:
        required: false
        type: boolean
        default: true
      VALIDATE_BASH_EXEC:
        required: false
        type: boolean
        default: true
      VALIDATE_CSS:
        required: false
        type: boolean
        default: true
      VALIDATE_DOCKER:
        required: false
        type: boolean
        default: true
      VALIDATE_GITHUB_ACTIONS:
        required: false
        type: boolean
        default: true
      VALIDATE_HTML:
        required: false
        type: boolean
        default: true
      VALIDATE_JAVASCRIPT_ES:
        required: false
        type: boolean
        default: true
      VALIDATE_JAVASCRIPT_STANDARD:
        required: false
        type: boolean
        default: true
      VALIDATE_JSON:
        required: false
        type: boolean
        default: true
      VALIDATE_MARKDOWN:
        required: false
        type: boolean
        default: true
      VALIDATE_POWERSHELL:
        required: false
        type: boolean
        default: true
      VALIDATE_RENOVATE:
        required: false
        type: boolean
        default: true
      VALIDATE_XML:
        required: false
        type: boolean
        default: true
      VALIDATE_YAML:
        required: false
        type: boolean
        default: true

jobs:
  flake8:
    name: flake8
    if: ${{ inputs.flake8-version != '' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install apt dependencies
      run: |
        sudo apt-get install -y -qq python3 python3-pip
    - name: Install pip dependencies
      run: |
        python -m pip install --upgrade pip
        pip3 install flake8==${{ inputs.flake8-version }}
        flake8 --version
    - name: Lint with Flake8
      run: |
        flake8 --config=.flake8 --count --statistics --show-source .
  pylint:
    name: pylint
    if: ${{ inputs.pylint-version != '' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install apt dependencies
      run: |
        sudo apt-get install -y -qq python3 python3-pip
    - name: Install pip dependencies
      run: |
        python -m pip install --upgrade pip
        pip3 install pylint==${{ inputs.pylint-version }}
        pylint --version
    - name: Configure Pylint
      if: ${{ hashFiles('.pylintrc') == '' }}
      run: |
        echo ".pylintrc does not exists. Will be downloaded."
        wget https://raw.githubusercontent.com/mundialis/github-workflows/main/linting-config-examples/.pylintrc
    - name: Configure Pylint - allowed to fail
      if: ${{ hashFiles('.pylintrc_allowed_to_fail') == '' }}
      run: |
        echo ".pylintrc_allowed_to_fail does not exists. Will be downloaded."
        wget https://raw.githubusercontent.com/mundialis/github-workflows/main/linting-config-examples/.pylintrc_allowed_to_fail
    - name: Lint with Pylint
      run: |
        pylint .
    - name: Lint with Pylint - More strict, allowed to fail
      run: |
        pylint --rc-file=.pylintrc_allowed_to_fail .
  black:
    name: black
    if: ${{ inputs.black-version != '' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install apt dependencies
      run: |
        sudo apt-get install -y -qq python3 python3-pip
    - name: Install pip dependencies
      run: |
        python -m pip install --upgrade pip
        pip3 install black==${{ inputs.black-version }}
        black --version
    - name: Check code style with Black
      run: |
        black --check --diff --line-length 79 .
  super-linter:
    name: super-linter
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      # To report GitHub Actions status checks
      statuses: write
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          # super-linter needs the full git history to get the
          # list of files that changed across commits
          fetch-depth: 0
      - name: Lint code base
        uses: super-linter/super-linter/slim@88ea3923a7e1f89dd485d079f6eb5f5e8f937589 # v6.6.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BRANCH: main
          # (https://github.com/super-linter/super-linter/blob/main/README.md)
          BASH_SEVERITY: warning
          VALIDATE_BASH: ${{ inputs.VALIDATE_BASH }}
          VALIDATE_BASH_EXEC: ${{ inputs.VALIDATE_BASH_EXEC }}
          VALIDATE_CSS: ${{ inputs.VALIDATE_CSS }}
          VALIDATE_DOCKER: ${{ inputs.VALIDATE_DOCKER }}
          VALIDATE_GITHUB_ACTIONS: ${{ inputs.VALIDATE_GITHUB_ACTIONS }}
          VALIDATE_HTML: ${{ inputs.VALIDATE_HTML }}
          VALIDATE_JAVASCRIPT_ES: ${{ inputs.VALIDATE_JAVASCRIPT_ES }}
          VALIDATE_JAVASCRIPT_STANDARD: ${{ inputs.VALIDATE_JAVASCRIPT_STANDARD }}
          VALIDATE_JSON: ${{ inputs.VALIDATE_JSON }}
          VALIDATE_MARKDOWN: ${{ inputs.VALIDATE_MARKDOWN }}
          VALIDATE_POWERSHELL: ${{ inputs.VALIDATE_POWERSHELL }}
          VALIDATE_RENOVATE: ${{ inputs.VALIDATE_RENOVATE }}
          VALIDATE_XML: ${{ inputs.VALIDATE_XML }}
          VALIDATE_YAML: ${{ inputs.VALIDATE_YAML }}
