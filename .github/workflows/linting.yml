name: Python Flake8 and pylint code quality check

on:
  workflow_call:
    inputs:
      black-version:
        required: false
        type: string
        default: '23.3.0'
      flake8-version:
        required: false
        type: string
        default: '6.0.0'
      pylint-version:
        required: false
        type: string
        default: '2.17.4'

jobs:
  flake8:
    name: flake8
    if: ${{ inputs.flake8-version != '' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install apt dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y -qq python3 python3-pip
    - name: Install pip dependencies
      run: |
        python -m pip install --upgrade pip
        pip3 install flake8==${{ inputs.flake8-version }}
        flake8 --version
    - name: Lint with Flake8
      run: |
        flake8 --config=.flake8 --count --statistics --show-source .
  pylint:
    name: pylint
    if: ${{ inputs.pylint-version != '' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install apt dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y -qq python3 python3-pip
    - name: Install pip dependencies
      run: |
        python -m pip install --upgrade pip
        pip3 install pylint==${{ inputs.pylint-version }}
        pylint --version
    - name: Configure Pylint
      if: ${{ hashFiles('.pylintrc') == '' }}
      run: |
        echo ".pylintrc does not exists."
      # if [ ! -f ".pylintrc_allowed_to_fail" ]; then echo ".pylintrc_allowed_to_fail does not exists." ;  else echo "exists" ; fi
    - name: Lint with Pylint
      run: |
        pylint .
    - name: Lint with Pylint - More strict, allowed to fail
      run: |
        pylint --rc-file=.pylintrc_allowed_to_fail .
  black:
    name: black
    if: ${{ inputs.black-version != '' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install apt dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y -qq python3 python3-pip
    - name: Install pip dependencies
      run: |
        python -m pip install --upgrade pip
        pip3 install black==${{ inputs.black-version }}
        black --version
    - name: Check code style with Black
      run: |
        black --check --diff --line-length 79 .
